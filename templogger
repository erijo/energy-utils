#!/usr/bin/env python3

# Copyright (c) 2016 Erik Johansson <erik@ejohansson.se>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA

from datetime import datetime, timedelta
from tellcore import telldus

import argparse
import sqlite3


def initialize_database(path):
    conn = sqlite3.connect(path)
    cur = conn.cursor()
    cur.execute(
        '''CREATE TABLE IF NOT EXISTS temperature
	(protocol TEXT, model TEXT, id INTEGEAR, timestamp TEXT, temp REAL)''')
    conn.commit()
    return conn


def main():
    parser = argparse.ArgumentParser(
        description="Save temperatures from telldus")
    parser.add_argument('database', help="Path to database")
    args = parser.parse_args()

    conn = initialize_database(args.database)

    limit = datetime.now() - timedelta(minutes=5)
    values = []
    for sensor in telldus.TelldusCore().sensors():
        if not sensor.has_temperature():
            continue
        value = sensor.temperature()
        if value.datetime <= limit:
            continue
        try:
            values.append((sensor.protocol, sensor.model, sensor.id,
                           value.datetime, float(value.value)))
        except ValueError:
            continue
    with conn:
        conn.executemany(
            'INSERT OR IGNORE INTO temperature VALUES (?, ?, ?, ?, ?)',
            values)


if __name__ == '__main__':
    main()
