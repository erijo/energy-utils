#!/usr/bin/env python3

# Copyright (c) 2016 Erik Johansson <erik@ejohansson.se>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA

from pvoutput import PvOutput

import argparse
import configparser
import datetime
import logging


def main():
    logging.basicConfig(format="%(asctime)s %(levelname)s: %(message)s")

    parser = argparse.ArgumentParser(
        description="Get efficiency report from PVoutput.org"
    )
    parser.add_argument("config", help="Configuration file to use")
    parser.add_argument(
        "-d", "--debug", help="Enable debug output", action="store_true"
    )
    args = parser.parse_args()

    if args.debug:
        logging.getLogger().setLevel(logging.DEBUG)

    config = configparser.ConfigParser()
    config["pvoutput"] = {}
    config.read(args.config)

    modified = False
    if not config["pvoutput"].get("apikey"):
        config["pvoutput"]["apikey"] = input("PVOutput API key: ")
        modified = True
    if not config["pvoutput"].get("systemid"):
        config["pvoutput"]["systemid"] = input("PVOutput System Id: ")
        modified = True

    if modified:
        with open(args.config, "w") as configfile:
            config.write(configfile)

    pvoutput = PvOutput(config["pvoutput"]["apikey"], config["pvoutput"]["systemid"])

    output = pvoutput.get_output(limit=10)
    extended = pvoutput.get_extended(limit=10)

    print("             Total   String A   String B   Diff (A-B)")
    for o, e in zip(output, extended):
        assert o.date == e.date
        a = e.extended_5 / (17 * 330)
        b = e.extended_6 / (10 * 330)
        print(
            "%s   %.3f   %.3f      %.3f      %.3f"
            % (o.date.strftime("%Y-%m-%d"), o.efficiency, a, b, a - b)
        )


if __name__ == "__main__":
    main()
